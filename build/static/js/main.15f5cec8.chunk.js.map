{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","isLoading","invoices","id","console","log","updatedInvoices","this","filter","i","setState","fetch","response","json","body","allinvoices","map","invoice","Vendor","Amount","Invoice","Date","Button","className","onClick","remove","icon","faThumbsUp","faThumbsDown","faMoneyCheckAlt","faSearchDollar","faImage","Table","dark","responsive","striped","bordered","hover","scope","colSpan","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAkFeA,E,4MA3EXC,MAAQ,CAAGC,WAAU,EACbC,SAAS,I,qDAEVC,GACHC,QAAQC,IAAIF,GACZ,IAAIG,EAAkB,YAAIC,KAAKP,MAAME,UAAUM,QAAQ,SAAAC,GAAC,OAAGA,EAAEN,KAAMA,KAEnEI,KAAKG,SAAS,CAACR,SAAUI,M,4KAIFK,MAAM,8D,cAAvBC,E,gBACaA,EAASC,O,OAAtBC,E,OACNP,KAAKG,SAAS,CAACR,SAAUY,EAAMb,WAAU,I,qIAGnC,IAAD,OAECA,EAAYM,KAAKP,MAAMC,UACvBc,EAAcR,KAAKP,MAAME,SAE3B,GAAID,EACA,OAAO,6CACX,IAAIC,EACJa,EAAYC,KAAK,SAAAC,GAAO,OACpB,+BACI,6BAAKA,EAAQC,SACb,6BAAKD,EAAQE,SACb,6BAAKF,EAAQG,UACb,6BAAKH,EAAQI,OACb,6BAAI,eAACC,EAAA,EAAD,CAAQC,UAAU,yBAAyBC,QAAS,kBAAK,EAAKC,OAAOR,EAAQd,KAA7E,UAAkF,cAAC,IAAD,CAAiBuB,KAAMC,MAAzG,YACJ,6BAAI,eAACL,EAAA,EAAD,CAAQC,UAAU,wBAAwBC,QAAS,kBAAK,EAAKC,OAAOR,EAAQd,KAA5E,UAAiF,cAAC,IAAD,CAAiBuB,KAAME,MAAxG,eACJ,6BAAI,eAACN,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,QAAS,kBAAK,EAAKC,OAAOR,EAAQd,KAA1E,UAA+E,cAAC,IAAD,CAAiBuB,KAAMG,MAAtG,aACJ,6BAAI,eAACP,EAAA,EAAD,CAAQC,UAAU,yBAAyBC,QAAS,kBAAK,EAAKC,OAAOR,EAAQd,KAA7E,UAAkF,cAAC,IAAD,CAAiBuB,KAAMI,MAAzG,YACJ,6BAAI,eAACR,EAAA,EAAD,CAAQC,UAAU,yBAAyBC,QAAS,kBAAK,EAAKC,OAAOR,EAAQd,KAA7E,cAAmF,cAAC,IAAD,CAAiBuB,KAAMK,MAA1G,WATCd,EAAQd,OAczB,OAEI,sBAAKoB,UAAU,mDAAf,UAEI,qBAAKA,UAAU,MAAf,SACQ,qBAAKA,UAAU,SAAf,SACI,yEAGZ,qBAAKA,UAAU,MAAf,SACQ,qBAAKA,UAAU,gCAAf,SACI,eAACS,EAAA,EAAD,CAAOC,MAAI,EAACC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7C,UACI,gCACI,+BACA,oBAAIC,MAAM,MAAV,oBACA,oBAAKA,MAAM,MAAX,oBACA,oBAAKA,MAAM,MAAX,uBACA,oBAAKA,MAAM,MAAX,kBACA,oBAAKA,MAAM,MAAMC,QAAQ,IAAzB,qBACA,oBAAKD,MAAM,MAAX,wBAGR,gCACkC,IAA7B/B,KAAKP,MAAME,SAASsC,OAAa,oBAAID,QAAQ,IAAZ,4BAAqCrC,kB,GA/DrFuC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15f5cec8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Table, Button} from 'reactstrap';\r\nimport{FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faThumbsDown, faThumbsUp, faImage, faMoneyCheckAlt, faSearchDollar} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass App extends Component {\r\n    state = {  isLoading:false,\r\n            invoices:[],\r\n            }\r\n    remove(id){\r\n        console.log(id)\r\n        let updatedInvoices = [...this.state.invoices].filter (i=> i.id !==id)\r\n\r\n        this.setState({invoices :updatedInvoices});\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const response = await fetch('https://07w8lyk0j8.execute-api.us-east-1.amazonaws.com/Dev');\r\n        const body = await response.json();\r\n        this.setState({invoices: body, isLoading:false})\r\n    }\r\n\r\n    render() { \r\n            \r\n        const isLoading = this.state.isLoading;\r\n        const allinvoices = this.state.invoices;\r\n\r\n            if (isLoading)\r\n                return(<div>Loading...</div>)\r\n            let invoices = \r\n            allinvoices.map( invoice=>\r\n                <tr key={invoice.id}>\r\n                    <td>{invoice.Vendor}</td>\r\n                    <td>{invoice.Amount}</td>\r\n                    <td>{invoice.Invoice}</td>\r\n                    <td>{invoice.Date}</td>\r\n                    <td><Button className=\"btn btn-lg btn-success\" onClick={()=> this.remove(invoice.id)}><FontAwesomeIcon icon={faThumbsUp}/> OK </Button></td>\r\n                    <td><Button className=\"btn btn-lg btn-danger\" onClick={()=> this.remove(invoice.id)}><FontAwesomeIcon icon={faThumbsDown}/> NotOk </Button></td>\r\n                    <td><Button className=\"btn btn-lg btn-info\" onClick={()=> this.remove(invoice.id)}><FontAwesomeIcon icon={faMoneyCheckAlt}/> 50% </Button></td>\r\n                    <td><Button className=\"btn btn-lg btn-warning\" onClick={()=> this.remove(invoice.id)}><FontAwesomeIcon icon={faSearchDollar}/> ?? </Button></td>\r\n                    <td><Button className=\"btn btn-lg btn-warning\" onClick={()=> this.remove(invoice.id)}> <FontAwesomeIcon icon={faImage}/> </Button></td>\r\n                </tr>\r\n                \r\n                )\r\n\r\n        return ( \r\n\r\n            <div className=\"container border border-secondary rounded center\">\r\n\r\n                <div className=\"row\">\r\n                        <div className=\"col-12\"> \r\n                            <h4>Pending Invoices - The Test Company</h4>\r\n                        </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                        <div className=\".col-xs-12 center text-center\">\r\n                            <Table dark responsive striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th scope=\"row\">Vendor</th>\r\n                                    <th  scope=\"row\">Amount</th>\r\n                                    <th  scope=\"row\">Invoice #</th>\r\n                                    <th  scope=\"row\">Date</th>      \r\n                                    <th  scope=\"row\" colSpan=\"4\">Actions</th>  \r\n                                    <th  scope=\"row\">Image</th> \r\n                                    </tr>                           \r\n                                </thead>\r\n                            <tbody>\r\n                                {this.state.invoices.length===0 ? <td colSpan=\"9\">All caught up!</td>: invoices}\r\n                            </tbody>\r\n\r\n                            </Table>\r\n                        </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}